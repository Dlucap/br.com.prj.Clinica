/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PacoteTeste.visao;

import ModeloConection.ConexaoBd;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import ModeloDao.DaoAlias;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel Lucas
 */
public class FormAlias extends javax.swing.JFrame {

    private static File arquivo;
    String Url;
    //ModeloAlias alias;

    /**
     * Creates new form FormBancoDados
     */
    public FormAlias() {
        initComponents();
        percorrerAlias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - unknown
    private void initComponents() {
        jLabelServidor = new JLabel();
        jLabelBd = new JLabel();
        jLabelAlias = new JLabel();
        jTextFieldAlias = new JTextField();
        jTextFieldServidor = new JTextField();
        jTextFieldDataBaseName = new JTextField();
        jButtonCancelar = new JButton();
        jButtonSalvar = new JButton();
        jlistAlias = new List();
        jButtonTestarConexao = new JButton();
        jLabel4 = new JLabel();
        jButtonSair = new JButton();
        jLabelPorta = new JLabel();
        jTextFieldPorta = new JTextField();
        jButtonNovo = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Alias");
        setResizable(false);
        Container contentPane = getContentPane();

        //---- jLabelServidor ----
        jLabelServidor.setText("Servidor: ");

        //---- jLabelBd ----
        jLabelBd.setText("Banco de Dados: ");

        //---- jLabelAlias ----
        jLabelAlias.setText("Alias: ");

        //---- jButtonCancelar ----
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(e -> jButtonCancelarActionPerformed(e));

        //---- jButtonSalvar ----
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                jButtonSalvarMouseClicked(e);
            }
        });
        jButtonSalvar.addActionListener(e -> jButtonSalvarActionPerformed(e));

        //---- jlistAlias ----
        jlistAlias.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                jlistAliasMouseClicked(e);
            }
        });

        //---- jButtonTestarConexao ----
        jButtonTestarConexao.setText("Testar Conex\u00e3o");
        jButtonTestarConexao.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                jButtonTestarConexaoMouseClicked(e);
            }
            @Override
            public void mouseEntered(MouseEvent e) {
                jButtonTestarConexaoMouseEntered(e);
            }
        });
        jButtonTestarConexao.addActionListener(e -> jButtonTestarConexaoActionPerformed(e));

        //---- jLabel4 ----
        jLabel4.setText("Gerenciamento de alias");

        //---- jButtonSair ----
        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(e -> jButtonSairActionPerformed(e));

        //---- jLabelPorta ----
        jLabelPorta.setText("Porta:");

        //---- jButtonNovo ----
        jButtonNovo.setText("Novo");
        jButtonNovo.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                jButtonNovoMouseClicked(e);
            }
        });
        jButtonNovo.addActionListener(e -> jButtonNovoActionPerformed(e));

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGap(109, 109, 109)
                            .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE))
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jlistAlias, GroupLayout.PREFERRED_SIZE, 171, GroupLayout.PREFERRED_SIZE)
                            .addGroup(contentPaneLayout.createParallelGroup()
                                .addGroup(contentPaneLayout.createSequentialGroup()
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(contentPaneLayout.createParallelGroup()
                                        .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabelAlias)
                                            .addComponent(jLabelServidor)
                                            .addComponent(jLabelBd)
                                            .addComponent(jTextFieldServidor)
                                            .addComponent(jTextFieldAlias)
                                            .addComponent(jTextFieldDataBaseName, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE))
                                        .addGroup(contentPaneLayout.createSequentialGroup()
                                            .addComponent(jLabelPorta)
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextFieldPorta, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE))))
                                .addGroup(contentPaneLayout.createSequentialGroup()
                                    .addGap(39, 39, 39)
                                    .addComponent(jButtonTestarConexao)))))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButtonNovo, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonSalvar, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonCancelar)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonSair, GroupLayout.PREFERRED_SIZE, 82, GroupLayout.PREFERRED_SIZE)
                    .addGap(21, 21, 21))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addComponent(jlistAlias, GroupLayout.PREFERRED_SIZE, 208, GroupLayout.PREFERRED_SIZE)
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addComponent(jLabelAlias)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldAlias, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabelServidor)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldServidor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabelBd)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDataBaseName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelPorta)
                                .addComponent(jTextFieldPorta, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonTestarConexao)))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSair)
                        .addComponent(jButtonCancelar)
                        .addComponent(jButtonSalvar)
                        .addComponent(jButtonNovo))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        setSize(388, 361);
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTestarConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTestarConexaoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButtonTestarConexaoActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        DaoAlias alias = new DaoAlias();
        alias.criaAlias();

        alias.salvar(jTextFieldAlias.getText(), jTextFieldServidor.getText(), jTextFieldDataBaseName.getText(),
                jTextFieldPorta.getText());
        percorrerAlias();
        limparCampos();
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNovoMouseClicked
        // TODO add your handling code here:

        limparCampos();
    }//GEN-LAST:event_jButtonNovoMouseClicked

    private void jButtonSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSalvarMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButtonSalvarMouseClicked

    private void jButtonTestarConexaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTestarConexaoMouseClicked
        // TODO add your handling code here:
        Url = "jdbc:sqlserver://" + jTextFieldServidor.getText() + ":1433;databaseName="
                + jTextFieldDataBaseName.getText();
        ConexaoBd  conexaoBD = new ConexaoBd();
        conexaoBD.conectarBd(Url,1);
    }//GEN-LAST:event_jButtonTestarConexaoMouseClicked

    private void jButtonTestarConexaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTestarConexaoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonTestarConexaoMouseEntered

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
//        ModeloAlias alias = new ModeloAlias();
//        alias.percorrerAlias();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jlistAliasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistAliasMouseClicked
        BufferedReader arquivo = null;
        limparCampos();
        try {
            // TODO add your handling code here:
            jTextFieldAlias.setText("");
            String Nome = String.valueOf(jlistAlias.getSelectedItem());
            System.out.println("Linha selecionada: "+jlistAlias.getSelectedItem());
            System.out.println("Index selecionado: "+jlistAlias.getSelectedIndex());
            DaoAlias txt = new DaoAlias();
            arquivo = new BufferedReader(new FileReader(txt.file));
//https://pt.stackoverflow.com/questions/89339/comparar-linhas-com-txt-java-android
            try {
                while (arquivo.ready()) {
                    String linha = arquivo.readLine();
                   
                     if (linha.toLowerCase().contains(Nome.toLowerCase())) {
                                         
                    // pega a linha
                    
                    String[] valoresEntreVirgulas = linha.split(";");
                   //limpar vetor
                    //Arrays.fill (valoresEntreVirgulas, null);
                  // valoresEntreVirgulas = null;
                   
                    // System.out.println("\n\n");
                    // se achar a palavra aprovado entra no if
                   
                      //   System.out.println("Linha 1: " + linha.toLowerCase());
                       //  System.out.println("\n\n");
                      // jTextFieldAlias.setText("");
                        jTextFieldAlias.setText(valoresEntreVirgulas[0]);
//                        System.out.println("1 " + valoresEntreVirgulas[1]);
//                         System.out.println("\n\n");
//                        System.out.println("2 " + valoresEntreVirgulas[2]);
//                        try {
//
//                            //cria um scanner para ler o arquivo
//                            Scanner leitor = new Scanner(txt.file);
//
//                            //variavel que armazenara as linhas do arquivo
//                            String linhasDoArquivo = new String();
//
//                            //percorre todo o arquivo
//                            //while (leitor.hasNext()) {
//
//                                //recebe cada linha do arquivo
//                                //linhasDoArquivo = linha.nextLine();
//
//                                //separa os campos entre as virgulas de cada linha
//                                String[] valoresEntreVirgulas = linhasDoArquivo.split(";");
//                                //imprime a coluna que quiser
//                                jTextFieldAlias.setText(valoresEntreVirgulas[0]);
//                                jTextFieldServidor.setText(valoresEntreVirgulas[1]);
//                                jTextFieldDataBaseName.setText(valoresEntreVirgulas[2]);
//                                jTextFieldPorta.setText(valoresEntreVirgulas[3]);
//                          
//                           // }
//                                
//                        } catch (FileNotFoundException ex) {
//                            JOptionPane.showMessageDialog(null, "Erro na leitura do arquivo: " + ex.getMessage());
//                        }
                    }

                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Erro na leitura do arquivo: " + ex.getMessage());
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FormAlias.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
//            try {
//                arquivo.close();
//            } catch (IOException ex) {
//                Logger.getLogger(FormAlias.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }//GEN-LAST:event_jlistAliasMouseClicked
    public void limparCampos() {
        jTextFieldAlias.setText(" ");
        jTextFieldDataBaseName.setText(" ");
        jTextFieldServidor.setText(" ");
        jTextFieldPorta.setText(" ");
    }

    public void percorrerAlias() {
        DaoAlias txt = new DaoAlias();

        try {

            //cria um scanner para ler o arquivo
            Scanner leitor = new Scanner(txt.file);

            //variavel que armazenara as linhas do arquivo
            String linhasDoArquivo = new String();

            //ignora a primeira linha do arquivo
            //  leitor.nextLine();
            //percorre todo o arquivo
            while (leitor.hasNext()) {

                //recebe cada linha do arquivo
                linhasDoArquivo = leitor.nextLine();

                //separa os campos entre as virgulas de cada linha
                String[] valoresEntreVirgulas = linhasDoArquivo.split(";");
                //imprime a coluna que quiser
//                System.out.println("\n");
//                System.out.println(valoresEntreVirgulas[3]);
//                System.out.println(valoresEntreVirgulas[2]);
//                System.out.println(valoresEntreVirgulas[1]);
//                System.out.println(valoresEntreVirgulas[0]);
                jlistAlias.add(valoresEntreVirgulas[0]);
            }

        } catch (FileNotFoundException e) {
            System.out.println("teste4: " + e);
        }
    }
//https://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/FilenameUtils.html#method_detail
    //http://www.guj.com.br/t/como-ler-apenas-a-linha-20-de-um-txt/136542/5
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAlias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAlias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAlias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAlias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAlias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - unknown
    private JLabel jLabelServidor;
    private JLabel jLabelBd;
    private JLabel jLabelAlias;
    private JTextField jTextFieldAlias;
    private JTextField jTextFieldServidor;
    private JTextField jTextFieldDataBaseName;
    private JButton jButtonCancelar;
    private JButton jButtonSalvar;
    private List jlistAlias;
    private JButton jButtonTestarConexao;
    private JLabel jLabel4;
    private JButton jButtonSair;
    private JLabel jLabelPorta;
    private JTextField jTextFieldPorta;
    private JButton jButtonNovo;
    // End of variables declaration//GEN-END:variables
}
/**
 * BufferedReader arquivo = new BufferedReader(new
 * FileReader("caminho_do_arquivo")); while(arquivo.ready()) { * // pega a linha
 * String linha = arquivo.readLine();
 * System.out.println(linha.substring(linha.indexOf("<xMotivo>") +
 * "<xMotivo>".length(), linha.indexOf("</xMotivo>"))); * }
 * http://www.javac.com.br/jc/posts/list/215-pegar-informacao-de-um-arquivo-txt-resolvido.page
 *
 */
