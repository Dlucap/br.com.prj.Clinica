/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import ModeloDao.DaoCripSenhaUser;
import ModeloConection.ConexaoBd;
import org.apache.commons.codec.binary.Base64;
import ModeloDao.DaoUsuario;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import ModeloBeans.BeansUsuario;
import ModeloBeans.BeansModeloTabela;

/**
 *
 * @author Daniel Lucas
 */
public class FormUsuario extends javax.swing.JFrame {

    ConexaoBd conBd = new ConexaoBd();
    BeansUsuario mod = new BeansUsuario();
    DaoUsuario dao = new DaoUsuario();
    DaoCripSenhaUser crip = new DaoCripSenhaUser();
    FormEnvioEmail email = new FormEnvioEmail();

    int flag;

    /**
     * Creates new form FormUsuario
     */
    public FormUsuario() {
        initComponents();
        preencherTabelaUsuario("SELECT IDUSUARIO, NOME, EMAIL, TIPO FROM USUARIO ORDER BY NOME");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelUser = new javax.swing.JLabel();
        jButtonIncluir = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabelIdUser = new javax.swing.JLabel();
        jTextFieldIDusuario = new javax.swing.JTextField();
        jTextFieldUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabelSenha = new javax.swing.JLabel();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jLabelConfirmarSenha = new javax.swing.JLabel();
        jPasswordFieldConfirmarSenha = new javax.swing.JPasswordField();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldPesquisaUsuario = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuario = new javax.swing.JTable();
        jComboBoxTipoUsuario = new javax.swing.JComboBox<>();
        jButtonEmail = new javax.swing.JButton();
        jLabelCadUsuario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelUser.setText("Usuário");

        jButtonIncluir.setText("Incluir");
        jButtonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabelIdUser.setText("ID Usuário");

        jTextFieldIDusuario.setEnabled(false);

        jTextFieldUsuario.setEnabled(false);

        jLabel1.setText("Tipo :");

        jLabelSenha.setText("Senha");

        jPasswordFieldSenha.setEnabled(false);

        jLabelConfirmarSenha.setText("Confirmar Senha");

        jPasswordFieldConfirmarSenha.setEnabled(false);

        jLabelEmail.setText("Email");

        jTextFieldEmail.setEnabled(false);

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTableUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsuario);

        jComboBoxTipoUsuario.setEditable(true);
        jComboBoxTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Medico", "Secretaria", "Enfermeira", "Administrador" }));
        jComboBoxTipoUsuario.setEnabled(false);

        jButtonEmail.setText("Email");
        jButtonEmail.setEnabled(false);
        jButtonEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancelar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelUser)
                            .addComponent(jLabelIdUser)
                            .addComponent(jLabelSenha)
                            .addComponent(jLabelEmail)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldIDusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelConfirmarSenha)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPasswordFieldConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 426, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButtonEmail)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldPesquisaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIncluir)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonCancelar))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdUser)
                    .addComponent(jTextFieldIDusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUser)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSenha)
                    .addComponent(jLabelConfirmarSenha)
                    .addComponent(jPasswordFieldConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmail)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPesquisaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEmail)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabelCadUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelCadUsuario.setText("Cadastro de Usuários");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(jLabelCadUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabelCadUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 918, 564);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirActionPerformed
        // TODO add your handling code here:

        flag = 1;
        //Habilitar campos
        habilitaCampos();
        limparCampos();
        preencherIDUuarioIncluir();
        jButtonCancelar.setEnabled(true);
        jButtonSalvar.setEnabled(true);
        jButtonPesquisar.setEnabled(false);
        jButtonIncluir.setEnabled(!true);
        jButtonExcluir.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jButtonEmail.setEnabled(true);
        jButtonEmail.setEnabled(false);


    }//GEN-LAST:event_jButtonIncluirActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        if (jTextFieldUsuario.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o NOME para continuar.");
            jTextFieldUsuario.requestFocus();
        } else if (jPasswordFieldSenha.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o SENHA para continuar.");
            jPasswordFieldSenha.requestFocus();
        } else if (jPasswordFieldConfirmarSenha.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o campo CONFIRMAR SENHA para continuar.");
            jPasswordFieldConfirmarSenha.requestFocus();
        } else if (jPasswordFieldSenha.getText().equals(jPasswordFieldConfirmarSenha.getText())) {
            if (flag == 1) {
                //Ler campos da tela de cadastro do medico
                mod.setUNomeUser(jTextFieldUsuario.getText());
                mod.setUSenhaUser(crip.codificaBase64Encoder(jPasswordFieldSenha.getText()));
                mod.setUEmaiUser(jTextFieldEmail.getText());
                mod.setUTipo((String) jComboBoxTipoUsuario.getSelectedItem());
                dao.Salvar(mod);
                DesabilitaCampso();
                //jTextFieldUsuario.setEnabled(false);
                //jTextFieldEmail.setEnabled(false);
                //jPasswordFieldSenha.setEnabled(false);
                //jPasswordFieldConfirmarSenha.setEnabled(false);
                //jTextFieldEmail.setEnabled(false);
                //jComboBoxTipoUsuario.setEnabled(false);
//
                jButtonEditar.setEnabled(!true);
                jButtonCancelar.setEnabled(false);
                jButtonExcluir.setEnabled(false);
                preencherTabelaUsuario("SELECT IDUSUARIO, NOME, EMAIL, TIPO FROM USUARIO ORDER BY NOME");

            } else {
                flag = 2;
                mod.setUCodUser(Integer.parseInt(jTextFieldIDusuario.getText()));
                mod.setUNomeUser(jTextFieldUsuario.getText());
                mod.setUSenhaUser(crip.codificaBase64Encoder(jPasswordFieldSenha.getText()));
                mod.setUEmaiUser(jTextFieldEmail.getText());
                mod.setUTipo((String) jComboBoxTipoUsuario.getSelectedItem());
                dao.Editar(mod);
                //limpar campos
                limparCampos();
                //Bloquear os campos
                // jTextFieldPesquisaUsuario.setText("");
                jComboBoxTipoUsuario.setSelectedItem("Selecione");
                jTextFieldUsuario.setEnabled(false);
                jTextFieldEmail.setEnabled(false);
                jPasswordFieldSenha.setEnabled(false);

                jPasswordFieldConfirmarSenha.setEnabled(false);
                jTextFieldEmail.setEnabled(false);
                jComboBoxTipoUsuario.setEnabled(false);

                jButtonExcluir.setEnabled(false);
                jButtonEditar.setEnabled(!true);
                jButtonCancelar.setEnabled(false);
                jButtonIncluir.setEnabled(true);
                jButtonSalvar.setEnabled(false);
                preencherTabelaUsuario("SELECT IDUSUARIO, NOME, EMAIL, TIPO FROM USUARIO ORDER BY NOME");
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "As senhas não correspondem!\n"
                    + "Verifique as senhas informadas.");
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed
///**
//     * Codifica string na base 64 (Encoder)
//     */
//    public static String codificaBase64Encoder(String msg) {
//        return new Base64().encodeToString(msg.getBytes());
//    }
//
//    /**
//     * Decodifica string na base 64 (Decoder)
//     */
////      public static String decodificaBase64Decoder(String msg) {
////          return new String(new Base64().decode(msg));
////      }
    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        // TODO add your handling code here:

        mod.setUPesquisa(jTextFieldPesquisaUsuario.getText());
        BeansUsuario model = dao.buscaUsuario(mod);

        jButtonIncluir.setEnabled(true);
        jButtonSalvar.setEnabled(false);
        jButtonCancelar.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jButtonExcluir.setEnabled(false);

        jTextFieldIDusuario.setText(String.valueOf(model.getUCodUser()));
        jTextFieldUsuario.setText(model.getUNomeUser());
        jTextFieldEmail.setText(model.getUEmaiUser());
        jPasswordFieldSenha.setText(model.getUSenhaUser());
        jPasswordFieldConfirmarSenha.setText(model.getUSenhaUser());
        jComboBoxTipoUsuario.setSelectedItem(model.getUTipo());

        //daoTabelas.preencherTabelaUsuario("select * from usuario order by nome");
        preencherTabelaUsuario("select IDUSUARIO, NOME,EMAIL, TIPO from usuario  WHERE nome like '%" + mod.getUPesquisa() + "%'");
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
        int flag = 2;

        habilitaCampos();
        //  jButtonNovo.setEnabled(false);
        jButtonSalvar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonEmail.setEnabled(true);
        //  jButtonEditar.setEnabled(!true);
        jButtonExcluir.setEnabled(false);
        jTextFieldPesquisaUsuario.setText("");

    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        int resposta = 0;

        resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir? ");
        if (resposta == JOptionPane.YES_OPTION) {
            mod.setUCodUser(Integer.parseInt(jTextFieldIDusuario.getText()));
            dao.Excluir(mod);
            // preencherTabelaMedico("SELECT IDMEDICO,NOME,ESPEC, CRM FROM MEDICO "
            //       + "INNER JOIN ESPECIALIDADE ON MEDICO.IDESPECIALIDADE = ESPECIALIDADE.IDESPECIALIDADE ORDER BY NOME");

            jButtonSalvar.setEnabled(false);
            jButtonCancelar.setEnabled(false);
            jButtonIncluir.setEnabled(true);
            jButtonExcluir.setEnabled(false);
            jButtonEditar.setEnabled(false);
            jButtonEmail.setEnabled(false);

            limparCampos();
//        jButtonEditar.setEnabled(false);
//            jButtonCancelar.setEnabled(false);
//            jButtonNovo.setEnabled(true);
//            jButtonExcluir.setEnabled(false);
            preencherTabelaUsuario("SELECT IDUSUARIO, NOME, EMAIL, TIPO FROM USUARIO ORDER BY NOME");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    public void preencherIDUuarioIncluir() {
        conBd.conectarBd();
        try {
            String sql = "SELECT MAX(IDUSUARIO+1) AS PROXID FROM USUARIO";

            conBd.executaSql(sql);

            conBd.rs.first();

            jTextFieldIDusuario.setText(String.valueOf(conBd.rs.getInt("PROXID")));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao gerar o proximo ID do usuário");
        }
        conBd.DesconectarBd();
    }


    private void jTableUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsuarioMouseClicked
        // TODO add your handling code here:
        String NomeUsuario = "" + jTableUsuario.getValueAt(jTableUsuario.getSelectedRow(), 1);
        conBd.conectarBd();
        limparCampos();
        DesabilitaCampso();
        try {
            String sql = "SELECT * FROM USUARIO WHERE NOME = '" + NomeUsuario + "'";//String 
            conBd.executaSql(sql);
            conBd.rs.first();

            jTextFieldIDusuario.setText(String.valueOf(conBd.rs.getInt("IDUSUARIO")));
            jTextFieldUsuario.setText(conBd.rs.getString("NOME"));
            jTextFieldEmail.setText(conBd.rs.getString("EMAIL"));
            jPasswordFieldSenha.setText(crip.decodificaBase64Decoder(conBd.rs.getString("SENHA")));
            jPasswordFieldConfirmarSenha.setText(crip.decodificaBase64Decoder(conBd.rs.getString("SENHA")));
            jComboBoxTipoUsuario.setSelectedItem(conBd.rs.getString("TIPO"));
            jTextFieldPesquisaUsuario.setText("");

            jButtonIncluir.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            jButtonExcluir.setEnabled(true);
            jButtonCancelar.setEnabled(true);
            jButtonEditar.setEnabled(true);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar os dados do usuario!\n" + ex.getMessage());
        }
        jButtonIncluir.setEnabled(false);
        jButtonEditar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        conBd.DesconectarBd();

    }//GEN-LAST:event_jTableUsuarioMouseClicked

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:

        DesabilitaCampso();
        limparCampos();

        jButtonCancelar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonPesquisar.setEnabled(!false);
        jButtonIncluir.setEnabled(true);
        jButtonExcluir.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jButtonEmail.setEnabled(false);

    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmailActionPerformed
        // TODO add your handling code here:

        email.setVisible(true);
    }//GEN-LAST:event_jButtonEmailActionPerformed

    public void limparCampos() {

        jTextFieldIDusuario.setText("");
        jTextFieldUsuario.setText("");
        jTextFieldEmail.setText("");
        jPasswordFieldSenha.setText("");
        jPasswordFieldConfirmarSenha.setText("");
        jTextFieldEmail.setText("");
        jComboBoxTipoUsuario.setSelectedItem("Selecione");
    }

    public void habilitaCampos() {

        jTextFieldUsuario.setEnabled(true);
        jTextFieldEmail.setEnabled(true);
        jPasswordFieldSenha.setEnabled(true);
        jPasswordFieldConfirmarSenha.setEnabled(true);
        jTextFieldEmail.setEnabled(true);
        jComboBoxTipoUsuario.setEnabled(true);

    }

    public void DesabilitaCampso() {

        jTextFieldUsuario.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jPasswordFieldSenha.setEnabled(false);
        jPasswordFieldConfirmarSenha.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jComboBoxTipoUsuario.setEnabled(false);

    }

    @SuppressWarnings("unchecked")
    public final void preencherTabelaUsuario(String sql) {

        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID", "NOME", "TIPO"};
        conBd.conectarBd();

        conBd.executaSql(sql);

        try {
            conBd.rs.first();
            do {
                dados.add(new Object[]{conBd.rs.getInt("IDUSUARIO"), conBd.rs.getString("NOME"), conBd.rs.getString("TIPO")});

            } while (conBd.rs.next());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Busque por outro usuário para preencher tabela.");
        }
        BeansModeloTabela modelo = new BeansModeloTabela(dados, colunas);
        jTableUsuario.setModel(modelo);

        jTableUsuario.getColumnModel().getColumn(0).setPreferredWidth(36);//Tamanho da tabela
        jTableUsuario.getColumnModel().getColumn(0).setResizable(false);

        jTableUsuario.getColumnModel().getColumn(1).setPreferredWidth(220);
        jTableUsuario.getColumnModel().getColumn(1).setResizable(false);

        jTableUsuario.getColumnModel().getColumn(2).setPreferredWidth(120);
        jTableUsuario.getColumnModel().getColumn(2).setResizable(false);

        jTableUsuario.getTableHeader().setReorderingAllowed(false);//reorganizar o cabeçalho
        jTableUsuario.setAutoResizeMode(jTableUsuario.AUTO_RESIZE_OFF); //NÃO VAI PODER REDIMENCIONAR A TABELA
        jTableUsuario.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//selecionar um por vez 

        conBd.DesconectarBd();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonEmail;
    private javax.swing.JButton jButtonExcluir;
    protected javax.swing.JButton jButtonIncluir;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxTipoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCadUsuario;
    private javax.swing.JLabel jLabelConfirmarSenha;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelIdUser;
    private javax.swing.JLabel jLabelSenha;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JPanel jPanel1;
    protected javax.swing.JPasswordField jPasswordFieldConfirmarSenha;
    protected javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTable jTableUsuario;
    protected javax.swing.JTextField jTextFieldEmail;
    public javax.swing.JTextField jTextFieldIDusuario;
    private javax.swing.JTextField jTextFieldPesquisaUsuario;
    protected javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables
}
