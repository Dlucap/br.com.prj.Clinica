package Visao;

import ModeloBeans.BeansAgendamento;
import ModeloBeans.ModeloTabela;
import ModeloConection.ConexaoBd;
import ModeloDao.DaoAgendamento;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.Clock;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Daniel Lucas
 */
public class FormAgenda extends javax.swing.JFrame {

    ConexaoBd conBd = new ConexaoBd();
    BeansAgendamento agen = new BeansAgendamento();
    DaoAgendamento daoagenda = new DaoAgendamento();
    SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");

    String dtHoje, dthoje, status, Agenda;

    public FormAgenda() {

        initComponents();
        DataHoje();

    }

    public void DataHoje() {
        Calendar data = Calendar.getInstance();
        Date d = data.getTime();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        dtHoje = dateFormat.format(d);
        status = "Aberto";
    }

    /**
     * Status de atendimento Aberto = 0 Em Atendimento = 1 Finalizado = 2
     * Cancelado = 3
     *
     * @param sql
     *
     */
    public final void preencherTabelaAgenda(String sql) {

        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID", "STATUS", "NOME PACIENTE", "HORA", "DATA", "NOME MEDICO", "ESPECIALIDADE", "RETORNO"};
        Locale localZone = new Locale("br", "PT");
        SimpleDateFormat dt = new SimpleDateFormat("dd/MM/yyyy", localZone);
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        //  Date dt = null;
        String retorno;

        try {
            conBd.conectarBd();
            conBd.executaSql(sql);
            conBd.rs.first();

            do {
                if (conBd.rs.getBoolean("RETORNO") == true) {
                    retorno = "       Sim";
                } else {
                    retorno = "       Não";
                }
                dados.add(new Object[]{conBd.rs.getInt("IDAGENDAMENTO"), conBd.rs.getString("STATUSCONSULTA"), conBd.rs.getString("NOMEPACIENTE"),
                    //sdf.format(conBd.rs.getString("HORA")), dt.format(conBd.rs.getDate("DTAGENDAMENTO")), conBd.rs.getString("NOMEMEDICO"), conBd.rs.getString("ESPEC"),
                    sdf.format(conBd.rs.getTime("HORA")), dt.format(conBd.rs.getDate("DTAGENDAMENTO")), conBd.rs.getString("NOMEMEDICO"), conBd.rs.getString("ESPEC"),
                    retorno});

            } while (conBd.rs.next());
            jButtonIniciarConusulta.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Nenhuma consulta localizada para hoje.");
            jButtonIniciarConusulta.setEnabled(false);
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, "erro: \n" + ex.getMessage());
        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        jTableAgenda.setModel(modelo);

        jTableAgenda.getColumnModel().getColumn(0).setPreferredWidth(38);//Tamanho da tabela
        jTableAgenda.getColumnModel().getColumn(0).setResizable(false);

        jTableAgenda.getColumnModel().getColumn(1).setPreferredWidth(105);
        jTableAgenda.getColumnModel().getColumn(1).setResizable(false);

        jTableAgenda.getColumnModel().getColumn(2).setPreferredWidth(237);
        jTableAgenda.getColumnModel().getColumn(2).setResizable(false);

        jTableAgenda.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTableAgenda.getColumnModel().getColumn(3).setResizable(false);

        jTableAgenda.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTableAgenda.getColumnModel().getColumn(4).setResizable(false);

        jTableAgenda.getColumnModel().getColumn(5).setPreferredWidth(237);
        jTableAgenda.getColumnModel().getColumn(5).setResizable(false);

        jTableAgenda.getColumnModel().getColumn(6).setPreferredWidth(124);
        jTableAgenda.getColumnModel().getColumn(6).setResizable(false);

        jTableAgenda.getColumnModel().getColumn(7).setPreferredWidth(80);
        jTableAgenda.getColumnModel().getColumn(7).setResizable(false);

        jTableAgenda.getTableHeader().setReorderingAllowed(false);//reorganizar o cabeçalho
        jTableAgenda.setAutoResizeMode(jTableAgenda.AUTO_RESIZE_OFF); //NÃO VAI PODER REDIMENCIONAR A TABELA
        jTableAgenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//selecionar um por vez 
        //total do tamanho dos campos = 38 + 237 + 110 + 65 = 450
        conBd.DesconectarBd();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAgenda = new javax.swing.JTable();
        jLabelAgenHj = new javax.swing.JLabel();
        jButtonIniciarConusulta = new javax.swing.JButton();
        jButtonBuscarAgendamento = new javax.swing.JButton();
        jButtonHoje = new javax.swing.JButton();
        jDateChooserAgenda = new com.toedter.calendar.JDateChooser();
        jButtonCancelarConsulta = new javax.swing.JButton();
        jButtonAlterarConsulta = new javax.swing.JButton();
        jButtonVerConsulta = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jTableAgenda.setBorder(new javax.swing.border.MatteBorder(null));
        jTableAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableAgenda.setToolTipText("");
        jTableAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAgendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAgenda);

        jLabelAgenHj.setText("Agendamento do dia :");

        jButtonIniciarConusulta.setText("Iniciar Consulta");
        jButtonIniciarConusulta.setEnabled(false);
        jButtonIniciarConusulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarConusultaActionPerformed(evt);
            }
        });

        jButtonBuscarAgendamento.setText("Buscar");
        jButtonBuscarAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarAgendamentoActionPerformed(evt);
            }
        });

        jButtonHoje.setText("Hoje");
        jButtonHoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHojeActionPerformed(evt);
            }
        });

        jDateChooserAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateChooserAgendaMouseClicked(evt);
            }
        });
        jDateChooserAgenda.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserAgendaPropertyChange(evt);
            }
        });

        jButtonCancelarConsulta.setText("Cancelar Consulta");
        jButtonCancelarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarConsultaActionPerformed(evt);
            }
        });

        jButtonAlterarConsulta.setText("Alterar Consulta");
        jButtonAlterarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarConsultaActionPerformed(evt);
            }
        });

        jButtonVerConsulta.setText("Ver Consulta");
        jButtonVerConsulta.setEnabled(false);
        jButtonVerConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(jLabelAgenHj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooserAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscarAgendamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonHoje)
                        .addGap(0, 376, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonVerConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jButtonAlterarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButtonCancelarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jButtonIniciarConusulta, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAgenHj, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonBuscarAgendamento)
                        .addComponent(jButtonHoje))
                    .addComponent(jDateChooserAgenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonAlterarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonVerConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonIniciarConusulta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Agenda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(427, 427, 427)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        setSize(new java.awt.Dimension(1016, 580));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAgendaMouseClicked
        // TODO add your handling code here:
        Agenda = "" + jTableAgenda.getValueAt(jTableAgenda.getSelectedRow(), 0); //pega o primeira coluna da tabela

    }//GEN-LAST:event_jTableAgendaMouseClicked

    private void jButtonIniciarConusultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarConusultaActionPerformed

        daoagenda.Alterar(agen);
        preencherTabelaAgenda("SELECT AGENDAMENTO.IDAGENDAMENTO, AGENDAMENTO.STATUSCONSULTA, PACIENTE.NOMEPACIENTE,"
                + " HORARIO.HORA, AGENDAMENTO.DTAGENDAMENTO, MEDICO.NOMEMEDICO, ESPECIALIDADE.ESPEC, AGENDAMENTO.RETORNO"
                + " FROM AGENDAMENTO (NOLOCK)"
                + " INNER JOIN PACIENTE  (NOLOCK)ON AGENDAMENTO.IDPACIENTE = PACIENTE.IDPACIENTE"
                + " INNER JOIN MEDICO (NOLOCK) ON AGENDAMENTO.IDMEDICO = MEDICO.IDMEDICO"
                + " INNER JOIN ESPECIALIDADE  (NOLOCK) ON AGENDAMENTO.IDESPECIALIDADE = ESPECIALIDADE.IDESPECIALIDADE"
                + " INNER JOIN HORARIO  (NOLOCK) ON AGENDAMENTO.IDHORA = HORARIO.IDHORA"
                + " WHERE DTAGENDAMENTO ='" + dtHoje + "' AND STATUSCONSULTA = '" + status + "' ORDER BY HORARIO.HORA");

    }//GEN-LAST:event_jButtonIniciarConusultaActionPerformed

    private void jButtonBuscarAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarAgendamentoActionPerformed

        if (jDateChooserAgenda.getDate() == null) {

            JOptionPane.showMessageDialog(null, "Informe uma data!", "Atenção!!", HEIGHT);

        }
        verificaDiaConsulta(jDateChooserAgenda.getDate());
        preencherTabelaAgenda("SELECT AGENDAMENTO.IDAGENDAMENTO, AGENDAMENTO.STATUSCONSULTA, PACIENTE.NOMEPACIENTE,"
                + " HORARIO.HORA, AGENDAMENTO.DTAGENDAMENTO, MEDICO.NOMEMEDICO, ESPECIALIDADE.ESPEC, AGENDAMENTO.RETORNO"
                + " FROM AGENDAMENTO (NOLOCK)"
                + " INNER JOIN PACIENTE (NOLOCK) ON AGENDAMENTO.IDPACIENTE = PACIENTE.IDPACIENTE"
                + " INNER JOIN MEDICO (NOLOCK) ON AGENDAMENTO.IDMEDICO = MEDICO.IDMEDICO"
                + " INNER JOIN ESPECIALIDADE (NOLOCK) ON AGENDAMENTO.IDESPECIALIDADE = ESPECIALIDADE.IDESPECIALIDADE"
                + " INNER JOIN HORARIO (NOLOCK) ON AGENDAMENTO.IDHORA = HORARIO.IDHORA"
                + " WHERE DTAGENDAMENTO ='" + date.format(jDateChooserAgenda.getDate()) + "' ORDER BY HORARIO.HORA");
    }//GEN-LAST:event_jButtonBuscarAgendamentoActionPerformed

    public void verificaDiaConsulta(Date dataDiaconsulta) {
        Calendar data = Calendar.getInstance();
        Date d = data.getTime();
        SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
        DataHoje();
        
        System.out.println("dateFormate :" + dFormat.format(dataDiaconsulta));
        System.out.println("dFormate :" + dFormat.format(d));
        /*       
        Date d = data.getTime();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        pensar em uma logica melhor
         */
        if (dataDiaconsulta.equals(d)) {

            jButtonIniciarConusulta.setVisible(true);
            jButtonIniciarConusulta.setEnabled(true);
            jButtonVerConsulta.setEnabled(false);

        } else if (dataDiaconsulta.after(d)) {
            jButtonCancelarConsulta.setEnabled(true);
            jButtonIniciarConusulta.setEnabled(false);
            jButtonAlterarConsulta.setEnabled(true);
            jButtonVerConsulta.setEnabled(false);

        } else if (dataDiaconsulta.before(d)) {

            jButtonCancelarConsulta.setEnabled(false);
            jButtonIniciarConusulta.setEnabled(false);
            jButtonAlterarConsulta.setEnabled(false);
            jButtonVerConsulta.setEnabled(true);
        }

    }
    private void jButtonHojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHojeActionPerformed
        
        preencherTabelaAgenda("SELECT AGENDAMENTO.IDAGENDAMENTO, AGENDAMENTO.STATUSCONSULTA, PACIENTE.NOMEPACIENTE,"
                + " HORARIO.HORA, AGENDAMENTO.DTAGENDAMENTO, MEDICO.NOMEMEDICO, ESPECIALIDADE.ESPEC, AGENDAMENTO.RETORNO"
                + " FROM AGENDAMENTO (NOLOCK)"
                + " INNER JOIN PACIENTE (NOLOCK) ON AGENDAMENTO.IDPACIENTE = PACIENTE.IDPACIENTE"
                + " INNER JOIN MEDICO (NOLOCK) ON AGENDAMENTO.IDMEDICO = MEDICO.IDMEDICO"
                + " INNER JOIN ESPECIALIDADE (NOLOCK) ON AGENDAMENTO.IDESPECIALIDADE = ESPECIALIDADE.IDESPECIALIDADE"
                + " INNER JOIN HORARIO (NOLOCK) ON AGENDAMENTO.IDHORA = HORARIO.IDHORA"
                + " WHERE DTAGENDAMENTO ='" + dtHoje + "' AND STATUSCONSULTA = '" + status + "' ORDER BY HORARIO.HORA");

        jDateChooserAgenda.setDate(null);

    }//GEN-LAST:event_jButtonHojeActionPerformed

    private void jDateChooserAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooserAgendaMouseClicked
        // TODO add your handling code here:

        jDateChooserAgenda.setDate(null);

    }//GEN-LAST:event_jDateChooserAgendaMouseClicked

    private void jButtonCancelarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarConsultaActionPerformed

        if (daoagenda.VerificaStatusConsulta(Agenda) == 0) {
            int respostaCancelamento = JOptionPane.showConfirmDialog(
                    rootPane, "Deseja realmente cancelar a consulta?\n\n"
                    + "Após cancelar não será possível reveter o processo.", "Atenção", JOptionPane.YES_NO_OPTION);

            if (respostaCancelamento == JOptionPane.YES_OPTION) {
                daoagenda.alteraStatusConsuta("Cancelado", Agenda);
                JOptionPane.showMessageDialog(rootPane, "A consulta foi cancelada com sucesso.");
                preencherTabelaAgenda("SELECT AGENDAMENTO.IDAGENDAMENTO, AGENDAMENTO.STATUSCONSULTA, PACIENTE.NOMEPACIENTE,"
                        + " HORARIO.HORA, AGENDAMENTO.DTAGENDAMENTO, MEDICO.NOMEMEDICO, ESPECIALIDADE.ESPEC, AGENDAMENTO.RETORNO"
                        + " FROM AGENDAMENTO (NOLOCK)"
                        + " INNER JOIN PACIENTE (NOLOCK) ON AGENDAMENTO.IDPACIENTE = PACIENTE.IDPACIENTE"
                        + " INNER JOIN MEDICO (NOLOCK) ON AGENDAMENTO.IDMEDICO = MEDICO.IDMEDICO"
                        + " INNER JOIN ESPECIALIDADE(NOLOCK)  ON AGENDAMENTO.IDESPECIALIDADE = ESPECIALIDADE.IDESPECIALIDADE"
                        + " INNER JOIN HORARIO (NOLOCK) ON AGENDAMENTO.IDHORA = HORARIO.IDHORA"
                        + " WHERE DTAGENDAMENTO ='" + dtHoje + "' AND STATUSCONSULTA = '" + status + "' ORDER BY HORARIO.HORA");
            } else if (respostaCancelamento == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(rootPane, "O cancelamento da consulta não foi executado.");
            }
        } else if (daoagenda.VerificaStatusConsulta(Agenda) != 0) {
            JOptionPane.showMessageDialog(rootPane, "A consulta selecionada esta com o status diferente de aberto.", "Cancelamento", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCancelarConsultaActionPerformed

    private void jButtonAlterarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarConsultaActionPerformed
        // TODO add your handling code here:
        /**
         * passar a validar o status da consulta, ao clicar para alterar uma
         * cosulta que esta cancelado por exemplo.
         */
        Agenda = "" + jTableAgenda.getValueAt(jTableAgenda.getSelectedRow(), 0); //pega o primeira coluna da tabela
        String statusConsulta = "" + jTableAgenda.getValueAt(jTableAgenda.getSelectedRow(), 1);
        /**
         * FormAgendamento(Agenda,1); 1 indica que será uma alteração no
         * agemdameno da consulta.
         */
        if ("Cancelado".equals(statusConsulta)) {
            JOptionPane.showMessageDialog(rootPane, "A consulta não pode ser alterada, pois ja está finalizada/cancelada/Em atendimento");
        } else {
            FormAgendamento agendamento = new FormAgendamento(Agenda, 1);
            agendamento.setVisible(true);
        }


    }//GEN-LAST:event_jButtonAlterarConsultaActionPerformed

    private void jDateChooserAgendaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserAgendaPropertyChange

    }//GEN-LAST:event_jDateChooserAgendaPropertyChange

    private void jButtonVerConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerConsultaActionPerformed
        
        
        Object ob = new Object();
     
    }//GEN-LAST:event_jButtonVerConsultaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAlterarConsulta;
    private javax.swing.JButton jButtonBuscarAgendamento;
    private javax.swing.JButton jButtonCancelarConsulta;
    private javax.swing.JButton jButtonHoje;
    private javax.swing.JButton jButtonIniciarConusulta;
    private javax.swing.JToggleButton jButtonVerConsulta;
    private com.toedter.calendar.JDateChooser jDateChooserAgenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAgenHj;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAgenda;
    // End of variables declaration//GEN-END:variables
}
